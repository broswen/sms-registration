service: sms-registration
frameworkVersion: '2'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    usePipenv: true

provider:
  name: aws
  runtime: python3.9
  memorySize: 128
  timeout: 3
  lambdaHashingVersion: 20201221

  stage: ${opt:stage, 'dev'}
  region: us-east-1

  apiGateway:
    description: sms-registration

  logs:
    restApi:
      format: '{"stage" : "$context.stage","request_id" : "$context.requestId","api_id" : "$context.apiId","resource_path" : "$context.resourcePath","resource_id" : "$context.resourceId","http_method" : "$context.httpMethod","source_ip" : "$context.identity.sourceIp","user-agent" : "$context.identity.userAgent","account_id" : "$context.identity.accountId","api_key" : "$context.identity.apiKey","caller" : "$context.identity.caller","user" : "$context.identity.user","user_arn" : "$context.identity.userArn"}'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
      Resource:
        - !GetAtt RegistrationTable.Arn
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: '*'


  environment:
    REGTABLE: !Ref RegistrationTable

package:
  patterns:
    - '!node_modules/**'
    - '!.idea/**'

functions:
  ping:
    handler: src/lambdas/ping.handler
    reservedConcurrency: 2
    events:
      - http:
          method: GET
          path: ping

# process SQS list of phone numbers and names, insert into dynamodb table (if not exist)
  submitRegistration:
    handler: src/lambdas/submit_registration.handler
    reservedConcurrency: 5
    events:
      - sqs:
          arn: !GetAtt RegistrationQueue.Arn
          batchSize: 10
          maximumBatchingWindow: 120

# watch table stream, generate confirmation code and send sns to provided phone number
  processRegistration:
    handler: src/lambdas/process_registration.handler
    reservedConcurrency: 5
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt RegistrationTable.StreamArn

# check if code exists, update registration if not expired
  confirmRegistration:
    handler: src/lambdas/confirm_registration.handler
    reservedConcurrency: 5
    events:
      - sqs:
          arn: !GetAtt ConfirmationQueue.Arn
          batchSize: 10
          maximumBatchingWindow: 120

resources:
  - ${file(./cfn-resources.yaml)}
